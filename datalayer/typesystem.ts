import { Type, Typesystem, IOC } from "@smallstack/core";

/**
 * THIS FILE IS AUTO-GENERATED AND WILL BE REPLACED ON ANY RE-GENERATION
 */

export function initializeTypesystem () {
    IOC.onRegister("typesystem", (typesystem: Typesystem) => {
    
        typesystem.addType(Type.fromDocument({"model":{"name":"Address","schema":[{"name":"street","type":"string"},{"name":"streetNumber","type":"string"},{"name":"zip","type":"number","min":4,"max":5},{"name":"city","type":"string"}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"configuration"},"service":{"name":"ConfigurationService","queries":[{"name":"getConfiguration","selector":{"scope":"everywhere"}}]},"model":{"name":"Configuration","schema":[{"name":"key","type":"string","unique":true,"index":true},{"name":"value","type":"string"},{"name":"scope","type":"string","allowedValues":["server","everywhere"]}]}}));

	typesystem.addType(Type.fromDocument({"model":{"name":"I18nText","schema":[{"name":"language","type":"string"},{"name":"value","type":"string"}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"languages"},"service":{"name":"LanguageService","queries":[{"name":"getAllLanguages","selector":{}},{"name":"getLanguageByKey","selector":{"key":":key"}}]},"model":{"name":"Language","schema":[{"name":"key","type":"string"},{"name":"fallback","type":"string[]","optional":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"localizations"},"service":{"name":"LocalizationService","queries":[{"name":"getLocalizationsForLanguage","selector":{"language":":languageKey"}},{"name":"getLocalizationForLanguage","selector":{"key":":key","language":":languageKey"}},{"name":"getLocalizations","selector":{},"sort":{"key":1}},{"name":"getLocalizedTextsByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getLocalizedTextById","selector":{"_id":":id:string"}}]},"model":{"name":"LocalizedText","schema":[{"name":"key","type":"string"},{"name":"value","type":"string","optional":true},{"name":"language","type":"string"}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"mediaformats"},"service":{"name":"MediaFormatService","queries":[{"name":"getMediaFormatByName","selector":{"name":":name"}},{"name":"getAllMediaFormats","selector":{}},{"name":"getMediaFormatsByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getMediaFormatById","selector":{"_id":":id:string"}}]},"model":{"name":"MediaFormat","schema":[{"name":"name","type":"string","unique":true},{"name":"preprocessed","type":"boolean","defaultValue":true},{"name":"command","type":"string","optional":true,"allowedValues":["resize","scale","blur","cover"]},{"name":"parameters","type":"any","optional":true,"blackbox":true},{"name":"isDefault","type":"boolean","optional":true,"defaultValue":false}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"medias"},"service":{"name":"MediaService","queries":[{"name":"getMediaByIds","selector":{"_id":{"$in":":ids:string[]"},"ownerId":"_currentLoggedInUser_"}},{"name":"getMediaById","selector":{"_id":":id:string"}},{"name":"getAllMedias"},{"name":"getMediasByTag","selector":{"tags":":tag"}}]},"model":{"name":"Media","schema":[{"name":"ownerId","type":"foreign","foreignType":"User","optional":true},{"name":"createdAt","type":"date"},{"name":"contentType","type":"string","optional":true},{"name":"availableFormatIds","type":"foreign[]","foreignType":"MediaFormat","optional":true,"defaultValue":[]},{"name":"tags","type":"string[]","optional":true,"defaultValue":[]}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"navigation"},"service":{"name":"NavigationService","queries":[{"name":"getNavigationForType","selector":{"type":":type"}},{"name":"getNavigationEntryById","selector":{"_id":":id:string"}}]},"model":{"name":"NavigationEntry","schema":[{"name":"label","type":"string","optional":true},{"name":"i18nLabel","type":"string","optional":true},{"name":"icon","type":"string","optional":true},{"name":"route","type":"string"},{"name":"requiresAuthentication","type":"boolean","defaultValue":true},{"name":"loginStateName","type":"string","optional":true},{"name":"requiredRole","type":"string","optional":true},{"name":"templateUrl","type":"string","optional":true},{"name":"controllerName","type":"string","optional":true},{"name":"pageId","type":"foreign","foreignType":"Page","optional":true},{"name":"visible","type":"boolean","optional":true,"defaultValue":true},{"name":"index","type":"number"},{"name":"type","type":"string","optional":true},{"name":"stateName","type":"string"},{"name":"abstract","type":"boolean","optional":true,"defaultValue":false},{"name":"defaultRoute","type":"boolean","optional":true,"defaultValue":false},{"name":"substateOfId","type":"foreign","foreignType":"NavigationEntry","optional":true},{"name":"badge","type":"number","optional":true},{"name":"trackingEnabled","type":"boolean","defaultValue":true},{"name":"redirectTo","type":"string","optional":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"pages"},"service":{"name":"PagesService","queries":[{"name":"getPageById","selector":{"_id":":id"}},{"name":"getAllPages","selector":{}},{"name":"getPageByName","selector":{"name":":name"}}]},"model":{"name":"Page","schema":[{"name":"name","type":"string"},{"name":"components","type":"object","optional":true,"blackbox":true},{"name":"socketConnections","type":"object[]","optional":true,"blackbox":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"pushnotifications"},"service":{"name":"PushNotificationService","queries":[{"name":"getAllPushNotifications","selector":{},"sort":{"createdAt":1},"access":{"hasRole":{"role":"backoffice.pushnotifications"}}}]},"model":{"name":"PushNotification","schema":[{"name":"subjects","type":"object","blackbox":true},{"name":"contents","type":"object","blackbox":true},{"name":"createdAt","type":"date"},{"name":"sentAt","type":"date","optional":true},{"name":"reachedCount","type":"number","defaultValue":0},{"name":"sent","type":"boolean","defaultValue":false}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"roles"},"service":{"name":"RolesService","queries":[{"name":"getRoleByName","selector":{"name":":name:string"}},{"name":"getRoleById","selector":{"_id":":id:string"}},{"name":"getRolesByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getAllRoles"}],"securedmethods":[]},"model":{"name":"Role","schema":[{"name":"name","type":"string","unique":true,"index":true,"min":3},{"name":"subRoleIds","type":"foreign[]","foreignType":"Role","optional":true,"defaultValue":[]}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"uploadedfiles"},"service":{"name":"UploadedFileService","queries":[{"name":"getUploadedFilesByIds","selector":{"_id":{"$in":":ids:string[]"},"ownerId":"_currentLoggedInUser_"}},{"name":"getFileById","selector":{"_id":":id:string"},"ownerId":"_currentLoggedInUser_"}]},"model":{"name":"UploadedFile","schema":[{"name":"ownerId","type":"foreign","foreignType":"User","optional":true},{"name":"createdAt","type":"date"},{"name":"contentType","type":"string","optional":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"users"},"service":{"name":"UserService","queries":[{"name":"getUsersByIds","selector":{"_id":{"$in":":ids"}},"fields":{"profile.displayName":1,"profile.avatarUrl":1,"profile.avatarId":1,"services.facebook.id":1,"services.google.picture":1,"roleIds":1}},{"name":"getUserById","selector":{"_id":":id"},"fields":{"profile.displayName":1,"profile.avatarUrl":1,"profile.avatarId":1,"services.facebook.id":1,"user.services.google.picture":1,"roleIds":1}},{"name":"getAllUsers","selector":{},"fields":{"profile.displayName":1,"profile.avatarUrl":1,"profile.avatarId":1,"services.facebook.id":1,"user.services.google.picture":1,"roleIds":1}},{"name":"getMyUser","selector":{"_id":"_currentLoggedInUser_"},"fields":{"services.password":0,"services.resume":0,"services.facebook.expiresAt":0,"services.facebook.accessToken":0,"services.google.accessToken":0,"services.google.idToken":0,"services.google.expiresAt":0,"services.google.scope":0,"services.google.verified_email":0,"services.email.verificationTokens":0}}],"skipSecuredMethodsGeneration":true,"securedmethods":[{"name":"updateProfileDetails","parameters":["newValues:any"],"returns":"any"}]},"customTransformMethod":"transformUsers","model":{"name":"User","schema":[{"name":"profile","type":"Object"},{"name":"emails","type":"Object[]","optional":true},{"name":"createdAt","type":"number"},{"name":"services","type":"Object","optional":true},{"name":"roleIds","type":"foreign[]","optional":true,"foreignType":"Role","defaultValue":[]}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"betgroups"},"service":{"queries":[{"name":"getBetgroupsByIds","selector":{"_id":{"$in":":ids:string[]"}}}]},"model":{"name":"BetGroup","schema":[{"name":"ownerId","type":"foreign","foreignType":"User"},{"name":"playerIds","type":"foreign[]","foreignType":"User","optional":true,"defaultValue":[]},{"name":"access","type":"string","allowedValues":["public","password"],"defaultValue":"public","optional":true},{"name":"joinPassword","type":"string","optional":true},{"name":"description","type":"string","optional":true},{"name":"name","type":"string"}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"bets"},"service":{"queries":[{"name":"getBetById","selector":{"_id":":id:string"}},{"name":"getBetsByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getBetsForCompetitionId","selector":{"competitionId":":competitionId"}},{"name":"getBetsForCompetitionAndUserId","selector":{"competitionId":":competitionId","ownerId":":userId"}},{"name":"getBetsForMatchAndUserId","selector":{"matchId":":matchId","ownerId":":userId"}},{"name":"getBetsForMatchId","selector":{"matchId":":matchId"}}]},"model":{"name":"Bet","schema":[{"name":"competitionId","type":"foreign","foreignType":"Competition"},{"name":"matchId","type":"foreign","foreignType":"CompetitionMatch"},{"name":"ownerId","type":"foreign","foreignType":"User"},{"name":"result","type":"number[]"},{"name":"points","type":"number","optional":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"competitionMatches"},"service":{"queries":[{"name":"getCompetitionMatchesByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getCompetitionMatchById","selector":{"_id":":id:string"}},{"name":"getCompetitionMatchByIndex","selector":{"index":":index:number"}},{"name":"getMatchesForCompetitionId","selector":{"competitionId":":competitionId"},"sort":{"date":1}},{"name":"getMatchesForCompetitionAndRound","selector":{"competitionId":":competitionId","roundId":":roundId"},"sort":{"date":1}},{"name":"getMatchesForTeam","selector":{"teamIds":{"$in":[":competitionTeamId"]}}},{"name":"getMatchesForCompetitionAndTeam","selector":{"teamIds":{"$in":[":competitionTeamId"]},"competitionId":":competitionId"}},{"name":"getMatchesForCompetitionAndTeamsAndDate","selector":{"teamIds":{"$all":[":teamAId",":teamBId"]},"date":":date","competitionId":":competitionId"}}],"securedmethods":[{"name":"updateScores","parameters":["matchId:string","resultHome:number","resultAway:number"],"returns":"boolean"},{"name":"resetScores","modelAware":true,"returns":"any"},{"name":"placeBet","parameters":["homeGoals:number","awayGoals:number"],"modelAware":true,"returns":"any"},{"name":"rated","modelAware":true,"returns":"any"}]},"model":{"name":"CompetitionMatch","schema":[{"name":"competitionId","type":"foreign","foreignType":"Competition"},{"name":"index","type":"number","optional":true},{"name":"date","type":"Date","optional":true},{"name":"roundId","type":"foreign","foreignType":"CompetitionRound"},{"name":"teamIds","type":"foreign[]","foreignType":"CompetitionTeam"},{"name":"result","type":"number[]","optional":true,"defaultValue":[]},{"name":"statusInternal","type":"string","allowedValues":["planned","started","finished"],"optional":true},{"name":"manuallyUpdated","type":"boolean","optional":true},{"name":"ratedByIds","type":"foreign[]","foreignType":"User","optional":true},{"name":"maxPoints","type":"number","optional":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"competitionRounds"},"service":{"queries":[{"name":"getCompetitionRoundById","selector":{"_id":":id:string"}},{"name":"getCompetitionRoundsByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getAllRoundsForCompetitionId","selector":{"competitionId":":competitionId"},"sort":{"index":1}}],"securedmethods":[{"name":"updateRoundDetails","parameters":["roundName:string","multiplier:number","index:number"],"modelAware":true,"returns":"any"}]},"model":{"name":"CompetitionRound","schema":[{"name":"competitionId","type":"foreign","foreignType":"Competition"},{"name":"name","type":"string"},{"name":"index","type":"number","min":0,"defaultValue":0,"optional":true},{"name":"multiplier","type":"number","min":0,"defaultValue":1},{"name":"subRoundIds","type":"foreign[]","foreignType":"CompetitionRound","optional":true,"defaultValue":[]},{"name":"matchIds","type":"foreign[]","foreignType":"CompetitionMatch","defaultValue":[],"optional":true},{"name":"allMatchesFinished","type":"boolean","defaultValue":false,"optional":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"competitionTeams"},"service":{"queries":[{"name":"getCompetitionTeamById","selector":{"_id":":id:string"}},{"name":"getCompetitionTeamsByIds","selector":{"_id":{"$in":":ids:string[]"}}},{"name":"getAllCompetitionTeams"},{"name":"getAllHumanTeams","selector":{"linkedUserIds.0":{"$exists":true}}},{"name":"getTeamByName","selector":{"name":":teamName"}}],"securedmethods":[]},"model":{"name":"CompetitionTeam","schema":[{"name":"ownerId","type":"foreign","foreignType":"User","optional":true},{"name":"name","type":"string","optional":true},{"name":"avatarId","type":"foreign","foreignType":"Media","optional":true},{"name":"flag","type":"string","optional":true},{"name":"linkedUserIds","type":"foreign[]","foreignType":"User","optional":true,"defaultValue":[]}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"competitions"},"service":{"queries":[{"name":"getCompetitionById","selector":{"_id":":id:string"}},{"name":"getCompetitionsByIds","selector":{"_id":{"$in":":ids:string"}}},{"name":"getAllCompetitions","sort":{"createdAt":-1}},{"name":"getCompetitionByName","selector":{"name":":name"}},{"name":"getMyCompetitions","selector":{"ownerId":"_currentLoggedInUser_"},"sort":{"createdAt":-1}}],"securedmethods":[{"name":"createCompetition","parameters":["competitionName:string","competitionType:string"],"returns":"string"},{"name":"startCompetition","parameters":["competitionId:string"],"returns":"boolean","visibility":"server"},{"name":"addTeam","parameters":["competitionId:string","teamId:string"],"returns":"boolean","visibility":"server"},{"name":"removeTeam","parameters":["competitionId:string","teamId:string"],"returns":"boolean","visibility":"server"},{"name":"sync","modelAware":true,"returns":"any"},{"name":"updateCompetitionViaMethod","parameters":["competition:any"],"modelAware":true,"returns":"any"}]},"model":{"name":"Competition","schema":[{"name":"ownerId","type":"foreign","foreignType":"User"},{"name":"createdAt","type":"date","optional":true},{"name":"name","type":"string","unique":"true"},{"name":"displayName","type":"string"},{"name":"type","type":"string","allowedValues":["quickMatch","tournament","league"]},{"name":"userIds","type":"foreign[]","foreignType":"User","optional":true,"defaultValue":[]},{"name":"administratorIds","type":"foreign[]","foreignType":"User","optional":true,"defaultValue":[]},{"name":"teamIds","type":"foreign[]","foreignType":"CompetitionTeam","optional":true,"defaultValue":[]},{"name":"roundIds","type":"foreign[]","foreignType":"CompetitionRound","defaultValue":[],"optional":true},{"name":"accessGroups","type":"string[]","defaultValue":[],"optional":true},{"name":"returnRound","type":"boolean","optional":true,"defaultValue":false},{"name":"randomizeTeams","type":"boolean","optional":true,"defaultValue":true},{"name":"started","type":"boolean","defaultValue":false},{"name":"metadata","type":"object","defaultValue":{},"optional":true,"blackbox":true},{"name":"syncer","type":"string","allowedValues":["footballdata","openligadb"],"optional":true},{"name":"ranking","type":"any[]","optional":true,"blackbox":true}]}}));

	typesystem.addType(Type.fromDocument({"collection":{"name":"devices"},"service":{"queries":[{"name":"getDeviceById","selector":{"_id":":id:string","ownerId":"_currentLoggedInUser_"}},{"name":"getDevicesByIds","selector":{"_id":{"$in":":ids:string[]"},"ownerId":"_currentLoggedInUser_"}},{"name":"getDeviceByDeviceId","selector":{"deviceId":":deviceId:string","ownerId":"_currentLoggedInUser_"}},{"name":"getMyDevices","selector":{"ownerId":"_currentLoggedInUser_"}}],"securedmethods":[{"name":"createNewDevice","parameters":["deviceId:string"],"returns":"any"},{"name":"configureDevice","parameters":[],"modelAware":true,"returns":"any"},{"name":"resetDevice","parameters":[],"modelAware":true,"returns":"any"},{"name":"removeDevice","parameters":[],"modelAware":true,"returns":"any"},{"name":"useDeviceForMatch","parameters":["matchId:string"],"modelAware":true,"returns":"any"}]},"model":{"name":"Device","schema":[{"name":"ownerId","type":"foreign","foreignType":"User"},{"name":"deviceId","type":"string","unique":true},{"name":"controls","type":"object","blackbox":true,"optional":true,"defaultValue":{}},{"name":"configureMode","type":"string","optional":true},{"name":"matchId","type":"foreign","foreignType":"CompetitionMatch","optional":true}]}}));

	
    });
}
